apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: study-ai
  labels:
    app: backend
    tier: application
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: backend
      tier: application
  template:
    metadata:
      labels:
        app: backend
        tier: application
    spec:
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nc -z mongodb-service 27017; do
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done
          echo "MongoDB is ready!"
      containers:
      - name: backend
        image: study-ai-backend:latest
        imagePullPolicy: IfNotPresent # Change to Always for production
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          value: "mongodb://$(MONGO_ROOT_USERNAME):$(MONGO_ROOT_PASSWORD)@mongodb-service:27017/study_ai?authSource=admin"
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: study-ai-secrets
              key: MONGO_ROOT_USERNAME
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: study-ai-secrets
              key: MONGO_ROOT_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: study-ai-secrets
              key: JWT_SECRET
        envFrom:
        - configMapRef:
            name: study-ai-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
      volumes:
      - name: uploads-storage
        emptyDir: {} # Use PVC for production
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: study-ai
  labels:
    app: backend
    tier: application
spec:
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: backend
    tier: application
  type: ClusterIP